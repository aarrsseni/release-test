init:
  - cinst graalvm
  - set PATH=C:\Program Files\GraalVM\graalvm-ce-19.1.0\bin;%PATH%
  - set JAR_NAME=test

image: Visual Studio 2015

build_script:
  - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
  - mvn clean install
  - for /f %%i in ('dir /b target\release-test-*.jar') do set JAR_NAME=%%i
  - native-image -jar target\%JAR_NAME% -H:Name=release-test
  - mvn clean package -P assembly
  - ls

#artifacts:
#  - path: target/*.zip

before_deploy:
  - ps: |
      # Create Chocolately Package

      # Because the bits need to be signed by MSFT, we are no longer using
      # the compiled version, but instead we'll use the one from the WDK.
      # The only problem is that the WDK versions aren't signed by MSFT either.

       Copy-Item -Path .\release-test.exe `
        -Destination .\release-test.portable\release-test.exe

      Set-Location -Path .\release-test.portable\
      (Get-Content '.\release-test.portable.nuspec' -Raw).Replace("<version>1.0</version>", "<version>$($env:APPVEYOR_REPO_TAG_NAME)</version>") | Out-File '.\release-test.portable.nuspec'
      Choco Pack
      Push-AppveyorArtifact ".\release-test.portable.$($ENV:APPVEYOR_REPO_TAG_NAME).nupkg"

deploy:
  - provider: BinTray
    username: aarrsseni
    api_key:
      secure: W4G0fUsOMO7GJnB11jQ2Cw1EgT04ktLq9MNfMAzQqZC+dNlI3dM7XGnzLXvuJmMW
    subject: aarrsseni
    repo: release-test-win
    package: release-win
    version: $($env:APPVEYOR_REPO_TAG_NAME)
    publish: true
    override: true
    explode: true
    on:
      APPVEYOR_REPO_TAG: true # keep casing this way for Linux builds where variables are case-sensitive

after_deploy:
  - ps: |
#      Set-Location -Path .\release-test.portable\
#      choco apikey -k [API_KEY_HERE] -source https://push.chocolatey.org/
#      choco push package-name.1.1.0.nupkg -s https://push.chocolatey.org/